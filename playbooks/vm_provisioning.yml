---
- name: Parse JSON input
  set_fact:
    topology: "{{ topology_desc | from_json}}"

- name: Check if topology is valid
  fail:
    msg: "Topology is not valid. Deployment cannot proceed."
  when: not topology_validity

- name: Print topology
  debug:
    var: topology


- name: Calculate required number of VMs
  set_fact:
    num_clusters: "{{ topology.topology_descriptor.cluster_list | length }}"
    num_nodes: "{{ topology.topology_descriptor.cluster_list | map(attribute='number_of_nodes') | sum }}"
    one_doc_enabled: "{{ topology.topology_descriptor.one_doc_enabled | bool }}"
    together_root_cluster: "{{ topology.topology_descriptor.together_root_cluster | bool }}"

- name: Verify if flag one_doc_enabled
  set_fact:
    plus_one: "{{ 1 if not one_doc_enabled and not together_root_cluster else 0 }}"

- name: Print number of clusters and nodes
  debug:
    msg: "Number of clusters: {{ num_clusters }}, Number of nodes: {{ num_nodes }}, Plus one: {{ plus_one }}"

- name: Calculate total number of VMs
  set_fact:
    total_vms: "{{ (num_clusters | int) + (num_nodes | int) + (plus_one | int) }}"

- name: Print total number of VMs
  debug:
    msg: "Total number of VMs: {{ total_vms }}"

- name: Inspect machine groups
  debug:
    msg: "Machine groups: {{ groups }}"

- name: Find available VMs in cmvm_pool
  add_host:
    name: "{{ item }}"
    groups: busy_vms
  loop: "{{ groups['cmvm_pool'] | default([]) }}"
  register: available_vm_list

- name: Ensure enough available VMs
  fail:
    msg: "Not enough available VMs in cmvm_pool. Required: {{ total_vms }}, Available: {{ available_vm_list.results | length }}"
  when: (available_vm_list.results | length) < (total_vms | int)

- name: Reserve VMs
  set_fact:
    busy_vms: "{{ groups['busy_vms'][:total_vms|int] }}"
  when: (available_vm_list.results | length) >= (total_vms | int)

- name: Print busy VMs
  debug:
    msg: "Busy VMs: {{ busy_vms }}"
  when: (available_vm_list.results | length) >= (total_vms | int)

- name: Update cmvm_pool group
  set_fact:
    groups:
      cmvm_pool: "{{ groups['cmvm_pool'] | difference(busy_vms) }}"
  when: (available_vm_list.results | length) >= (total_vms | int)

- name: Current members of cmvm_pool group
  debug:
    msg: "Updated cmvm_pool group: {{ groups['cmvm_pool'] }}"
  when: (available_vm_list.results | length) >= (total_vms | int)

- name: Update available VMs group
  set_fact:
    groups:
      available_vms: "{{ groups['all'] | difference(busy_vms) }}"
  when: (available_vm_list.results | length) >= (total_vms | int)

- name: Updated available_vms group
  debug:
    msg: "Updated available_vms group: {{ groups['all'] }}"


- include_tasks: github_results.yml
  vars:
    topology_desc: "{{ topology_descriptor }}"
    result: "Not enough available VMs in cmvm_pool. Required: {{ total_vms }}, Available: {{ available_vm_list.results | length }}"
  when: (available_vm_list.results | length) < (total_vms | int)
  
- include_tasks: github_results.yml
  vars:
    topology_desc: "{{ topology_descriptor }}"
    result: "Istantiatig topology. Required: {{ total_vms }}, Available: {{ available_vm_list.results | length }}"
  when: (available_vm_list.results | length) >= (total_vms | int)
