---
- name: Execute 1DOC template if one_doc_enabled is true
  hosts: "{{ group_1doc }}"
  roles:
    - ensure-oakestra-repo-is-cloned
    - start-1-doc
  gather_facts: false
  tasks:
    - name: Execute the second job template
      # Replace with the task or action to run your second job template
      debug:
        msg: "Running second job template on host {{ inventory_hostname }}"
      when: deploy_1doc

  vars:
    params: "-f run-a-cluster/override-alpha-versions.yaml"
    path: "{{ oak_repo_path }}"
    repo: "{{ oak_repo_link }}"
    branch: "{{ oak_repo_version }}"


---
- name: Determine the hosts we need
  hosts: localhost
  gather_facts: false

  tasks:
    - name: dummy task to fake you choice
      command: "echo {{ host_we_need | default('B') }}"
      register: host_choice

    - name: check condition to go on
      vars:
        allowed_hosts:
          - 
          - C
      assert:
        that:
          - host_choice.stdout in {{ reserved_hosts }} and host_choice.rc == 0
        fail_msg:
          - "Found host value is: {{ host_choice.stdout }}"
          - "It should be one of: {{ allowed_hosts | join(', ') }}"

    - name: add the needed host to in-memory inventory
      add_host:
        name: "{{ host_choice.stdout }}"
        groups:
          - "group_{{ host_choice.stdout }}"
        ansible_connection: local  # This is for a fake host for test only.

- name: play tasks for group_B
  hosts: group_B
  gather_facts: false

  tasks:
    - debug:
        msg: This a task for group_B

- name: play tasks for group_C
  hosts: group_C
  gather_facts: false

  tasks:
    - debug:
        msg: This is a task for group_C

- name: whatever leftover tasks on localhost
  hosts: localhost
  gather_facts: false

  tasks:
    - debug:
        msg: leftover localhost tasks
  hosts: group_B
