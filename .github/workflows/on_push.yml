name: Trigger AWX Job Template

on:
  push:
    branches:
      - main 
  
  workflow_dispatch:
    inputs:
      topology:
        description: 'Choose the topology to deploy'     
        required: true
        type: string
        default: topology.json
    
jobs:
  trigger-awx-job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Read topology file ${{ github.event.inputs.topology }}
        id: read_topology
        run: |
          cat ${{ github.event.inputs.topology }}  # Read file content
      - name: Get the token
        id: get_token
        env:
          TOWER_USER: ${{ secrets.TOWER_USER }}
          TOWER_PASS: ${{ secrets.TOWER_PASS }}
          TOWER_HOST: ${{ secrets.TOWER_HOST }}
        run: |
          response=$(curl -s -X POST "http://$TOWER_HOST/api/v2/users/1/personal_tokens/" \
            -u "$TOWER_USER:$TOWER_PASS" \
            -H "Content-Type: application/json" \
            --insecure)  # --insecure is equivalent to validate_certs: false in Ansible
          echo "$response" | jq .
          token=$(echo "$response" | jq -r '.token')
          echo "TOWER_API_TOKEN=$token" >> $GITHUB_ENV

      - name: Use the token
        env:
          TOWER_HOST: ${{ secrets.TOWER_HOST }}
          TEMPLATE_ID: ${{ secrets.TEMPLATE_ID }}
          TOWER_API_TOKEN: ${{ env.TOWER_API_TOKEN }}
        run: |
          # Parse the topology JSON
          topology_json=$(echo ${{ steps.read_topology.outputs }})

          # Use jq to convert the JSON string to a format suitable for curl (optional)
          # You might need to adjust this based on your specific JSON structure
          extra_vars_data=$(echo "$topology_json" | jq -r '. | tostring')
          response=$(curl -s -X POST "http://$TOWER_HOST/api/v2/job_templates/$TEMPLATE_ID/launch/" \
            -H "Authorization: Bearer $TOWER_API_TOKEN" \
            -H "Content-Type: application/json" \
            -d "$extra_vars_data"
            --insecure)  # --insecure is equivalent to validate_certs: false in Ansible
          echo "$response" | jq .
